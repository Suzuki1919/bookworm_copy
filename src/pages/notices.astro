---
import Base from "@/layouts/Base.astro";
import Posts from "@/layouts/Posts.astro";
import SocialWithImages from "@/layouts/components/SocialWithImages.astro";
import { getNoticeArticles } from "@/lib/microcms";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import taxonomyFilter from "@/lib/utils/taxonomyFilter";
import social from "@/config/social.json";
import cmsConfig from "@/config/cms.json";

// HTMLタグを除去する関数
function stripHtml(html: string): string {
  return html.replace(/<[^>]*>/g, '').trim();
}

let noticePosts: any[] = [];

try {
  if (cmsConfig.useMicroCMS) {
    // microCMSからお知らせ記事を取得
    const noticeResponse = await getNoticeArticles(10);
    
    // microCMSのレスポンスをPost形式に変換
    noticePosts = noticeResponse.contents.map((post: any) => {
      const cleanContent = post.content ? stripHtml(post.content) : '';
      const description = post.description || (cleanContent.length > 100 ? cleanContent.substring(0, 100) + '...' : cleanContent);
      
      const convertedPost = {
        id: post.id,
        slug: post.id,
        data: {
          title: post.title || 'お知らせ',
          description: description,
          date: new Date(post.publishedAt),
          image: post.image?.url || '/images/posts/01.jpg',
          categories: ['お知らせ'],
          content: post.content || '',
        },
      };
      
      return convertedPost;
    });
  } else {
    // ローカルファイルから取得（フォールバック）
    const posts = await getSinglePage("posts");
    const filteredPosts = taxonomyFilter(posts, "categories", "お知らせ");
    noticePosts = sortByDate(filteredPosts);
  }
} catch (error) {
  console.error('お知らせ記事の取得に失敗しました:', error);
  // エラー時はローカルファイルにフォールバック
  try {
    const posts = await getSinglePage("posts");
    const filteredPosts = taxonomyFilter(posts, "categories", "お知らせ");
    noticePosts = sortByDate(filteredPosts);
  } catch (fallbackError) {
    console.error('フォールバックも失敗しました:', fallbackError);
    noticePosts = [];
  }
}
---

<Base title="お知らせ">
  <section class="section">
    <div class="container">
      <h1 class="h2 page-heading mb-16 text-center">お知らせ</h1>
      
      <!-- お知らせ記事一覧 -->
      {noticePosts.length > 0 ? (
        <div class="row gy-5 gx-4 mb-16">
          {
            noticePosts.map((post) => (
              <div class="col-12 md:col-6">
                <a
                  href={`/${post.id}`}
                  class="block rounded-lg overflow-hidden hover:scale-[1.02] transition duration-300 group"
                >
                  {post.data.image && (
                    <img
                      src={post.data.image}
                      alt={post.data.title}
                      class="w-full h-48 object-cover group-hover:opacity-90 transition duration-300"
                    />
                  )}
                  <div class="p-6 bg-light">
                    <h3 class="text-xl font-semibold mb-2">{post.data.title}</h3>
                    <p class="text-gray-600 mb-2">{post.data.description}</p>
                    <p class="text-sm text-gray-500">
                      {new Date(post.data.date).toLocaleDateString('ja-JP', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </p>
                  </div>
                </a>
              </div>
            ))
          }
        </div>
      ) : (
        <div class="text-center py-16">
          <h2 class="text-xl font-semibold mb-4">お知らせはありません</h2>
          <p class="text-gray-600">現在、新しいお知らせはありません。</p>
        </div>
      )}
      
      <!-- ソーシャルメディアリンク -->
      <div class="text-center mb-16">
        <p class="text-lg font-semibold mb-4">フォローしてね！</p>
        <SocialWithImages source={social} className="flex justify-center space-x-2" />
      </div>
    </div>
  </section>
</Base> 